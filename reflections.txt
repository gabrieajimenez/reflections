How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
you can search for a change and review with the team.
or get lessons learned at the end of the sprint.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
pros
you are able to control the number of versions if you do it manually
you can comment in each commit 
you know what you change base on the version

cons
you might not commit at all
you might think the change is a minor change and not commit
you work with a team and they al commit not using the same standard.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
is helpful to have the whole group of files monitor by the system , because I change can affect multiple files ,  we can use the commit to check if the change is correct, or if the requirement was the correct one.

How can you use the commands git log and git diff to view the history of files?
you use git log to get all the commits and in this case you can work with git diff to get the changes from 2 different versions.

How might using version control make you more confident to make changes that could break something?
is a relief to have a version control :D

Now that you have your workspace set up, what do you want to try using Git for?
I will use it in every project :D

